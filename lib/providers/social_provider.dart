import 'package:flutter_riverpod/flutter_riverpod.dart';
import '../models/friend.dart';

class SocialNotifier extends StateNotifier<List<Friend>> {
  SocialNotifier() : super(_getDefaultFriends());
  
  static List<Friend> _getDefaultFriends() {
    final now = DateTime.now();
    return [
      Friend(
        id: '1',
        name: 'ÍπÄÎØºÏàò',
        status: OnlineStatus.studying,
        currentActivity: 'ÏàòÌïô - ÎØ∏Ï†ÅÎ∂Ñ',
        todayStudyMinutes: 120,
        streak: 15,
        lastSeen: now,
        level: 12,
        grade: 'Í≥†3',
        studyGoal: 'ÏàòÎä•',
        title: 'üî• Ïó¥Ï†ïÏôï',
      ),
      Friend(
        id: '2',
        name: 'Ïù¥ÏÑúÏó∞',
        status: OnlineStatus.studying,
        currentActivity: 'ÏòÅÏñ¥ Îã®Ïñ¥ ÏïîÍ∏∞',
        todayStudyMinutes: 85,
        streak: 7,
        lastSeen: now,
        level: 8,
        grade: 'Í≥†2',
        studyGoal: 'ÎÇ¥Ïã†',
        title: 'üìö Íæ∏Ï§ÄÌï®Ïùò Ï†ïÏÑù',
      ),
      Friend(
        id: '3',
        name: 'Î∞ïÏ§ÄÌò∏',
        status: OnlineStatus.rest,
        todayStudyMinutes: 95,
        streak: 3,
        lastSeen: now.subtract(const Duration(minutes: 5)),
        level: 5,
        grade: 'Ï§ë3',
        studyGoal: 'Í≥†ÏûÖ',
        title: 'üå± ÏÉàÏãπ',
      ),
      Friend(
        id: '4',
        name: 'ÏµúÏßÄÏùÄ',
        status: OnlineStatus.online,
        todayStudyMinutes: 60,
        streak: 12,
        lastSeen: now.subtract(const Duration(minutes: 10)),
        level: 10,
        grade: 'Í≥†1',
        studyGoal: 'ÎÇ¥Ïã†',
        title: '‚≠ê Ïö∞Îì±ÏÉù',
      ),
      Friend(
        id: '5',
        name: 'Ï†ïÌïòÏú§',
        status: OnlineStatus.offline,
        todayStudyMinutes: 150,
        streak: 30,
        lastSeen: now.subtract(const Duration(hours: 2)),
        level: 20,
        grade: 'Í≥†3',
        studyGoal: 'ÏàòÎä•',
        title: 'üëë Í≥µÎ∂ÄÏùò Ïã†',
      ),
    ];
  }
  
  void updateFriendStatus(String friendId, OnlineStatus status, [String? activity]) {
    state = state.map((friend) {
      if (friend.id == friendId) {
        return friend.copyWith(
          status: status,
          currentActivity: activity,
          lastSeen: DateTime.now(),
        );
      }
      return friend;
    }).toList();
  }
  
  void addFriend(Friend friend) {
    state = [...state, friend];
  }
  
  void removeFriend(String friendId) {
    state = state.where((f) => f.id != friendId).toList();
  }
  
  List<Friend> getOnlineFriends() {
    return state.where((f) => f.status != OnlineStatus.offline).toList();
  }
  
  List<Friend> getStudyingFriends() {
    return state.where((f) => f.status == OnlineStatus.studying).toList();
  }
}

// Providers
final socialProvider = StateNotifierProvider<SocialNotifier, List<Friend>>(
  (ref) => SocialNotifier(),
);

final onlineFriendsProvider = Provider<List<Friend>>((ref) {
  final friends = ref.watch(socialProvider);
  return friends.where((f) => f.status != OnlineStatus.offline).toList();
});

final studyingFriendsProvider = Provider<List<Friend>>((ref) {
  final friends = ref.watch(socialProvider);
  return friends.where((f) => f.status == OnlineStatus.studying).toList();
});

// ÎÇ¥ ÏÉÅÌÉú Í¥ÄÎ¶¨
final myStatusProvider = StateProvider<OnlineStatus>((ref) => OnlineStatus.online);
final myActivityProvider = StateProvider<String?>((ref) => null);