{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "S3 resource stack for Hyle Learning Platform",
  "Parameters": {
    "env": {
      "Type": "String",
      "Description": "Current Amplify environment name"
    },
    "bucketName": {
      "Type": "String",
      "Description": "Name of the S3 bucket"
    },
    "authRoleName": {
      "Type": "String"
    },
    "unauthRoleName": {
      "Type": "String"
    },
    "authPolicyName": {
      "Type": "String"
    },
    "unauthPolicyName": {
      "Type": "String"
    },
    "s3PublicPolicy": {
      "Type": "String",
      "Default": "NONE"
    },
    "s3PrivatePolicy": {
      "Type": "String",
      "Default": "NONE"
    },
    "s3ProtectedPolicy": {
      "Type": "String",
      "Default": "NONE"
    },
    "s3UploadsPolicy": {
      "Type": "String",
      "Default": "NONE"
    },
    "s3ReadPolicy": {
      "Type": "String",
      "Default": "NONE"
    },
    "authPermissions": {
      "Type": "CommaDelimitedList",
      "Default": "ALLOW"
    },
    "unauthPermissions": {
      "Type": "CommaDelimitedList",
      "Default": "DISALLOW"
    }
  },
  "Conditions": {
    "CreateAuthPublic": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "s3PublicPolicy"
            },
            "NONE"
          ]
        }
      ]
    },
    "CreateAuthProtected": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "s3ProtectedPolicy"
            },
            "NONE"
          ]
        }
      ]
    },
    "CreateAuthPrivate": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "s3PrivatePolicy"
            },
            "NONE"
          ]
        }
      ]
    },
    "CreateAuthUploads": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "s3UploadsPolicy"
            },
            "NONE"
          ]
        }
      ]
    },
    "CreateAuthRead": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "s3ReadPolicy"
            },
            "NONE"
          ]
        }
      ]
    },
    "AuthReadAndList": {
      "Fn::Equals": [
        {
          "Ref": "s3ReadPolicy"
        },
        "read"
      ]
    }
  },
  "Resources": {
    "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Fn::Sub": "${bucketName}-${env}"
        },
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "LifecycleConfiguration": {
          "Rules": [
            {
              "Id": "DeleteOldMultipartUploads",
              "Status": "Enabled",
              "AbortIncompleteMultipartUpload": {
                "DaysAfterInitiation": 1
              }
            },
            {
              "Id": "TransitionToIA",
              "Status": "Enabled",
              "Transitions": [
                {
                  "StorageClass": "STANDARD_IA",
                  "TransitionInDays": 30
                }
              ],
              "NoncurrentVersionTransitions": [
                {
                  "StorageClass": "STANDARD_IA",
                  "TransitionInDays": 30
                }
              ]
            }
          ]
        },
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": ["*"],
              "AllowedMethods": ["GET", "HEAD", "PUT", "POST", "DELETE"],
              "AllowedOrigins": ["*"],
              "ExposedHeaders": [
                "x-amz-server-side-encryption",
                "x-amz-request-id",
                "x-amz-id-2",
                "ETag"
              ],
              "MaxAge": 3000
            }
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": false,
          "BlockPublicPolicy": false,
          "IgnorePublicAcls": false,
          "RestrictPublicBuckets": false
        }
      }
    },
    "S3BucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "S3Bucket"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "PublicReadGetObject",
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Sub": "arn:aws:s3:::${S3Bucket}/public/*"
              }
            }
          ]
        }
      }
    },
    "S3AuthPublicPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Ref": "s3PublicPolicy"
        },
        "Roles": [
          {
            "Ref": "authRoleName"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:GetObject",
                "s3:DeleteObject"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::${S3Bucket}/public/*"
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListBucket"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::${S3Bucket}"
                }
              ],
              "Condition": {
                "StringLike": {
                  "s3:prefix": ["public/*"]
                }
              }
            }
          ]
        }
      },
      "Condition": "CreateAuthPublic"
    },
    "S3AuthProtectedPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Ref": "s3ProtectedPolicy"
        },
        "Roles": [
          {
            "Ref": "authRoleName"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:GetObject",
                "s3:DeleteObject"
              ],
              "Resource": [
                {
                  "Fn::Sub": [
                    "arn:aws:s3:::${S3Bucket}/protected/${identityId}/*",
                    {
                      "identityId": {
                        "Fn::Sub": "${aws:userid}"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListBucket"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::${S3Bucket}"
                }
              ],
              "Condition": {
                "StringLike": {
                  "s3:prefix": [
                    {
                      "Fn::Sub": [
                        "protected/${identityId}/*",
                        {
                          "identityId": {
                            "Fn::Sub": "${aws:userid}"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::${S3Bucket}/protected/*"
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListBucket"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::${S3Bucket}"
                }
              ],
              "Condition": {
                "StringLike": {
                  "s3:prefix": ["protected/*"]
                }
              }
            }
          ]
        }
      },
      "Condition": "CreateAuthProtected"
    },
    "S3AuthPrivatePolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Ref": "s3PrivatePolicy"
        },
        "Roles": [
          {
            "Ref": "authRoleName"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject",
                "s3:GetObject",
                "s3:DeleteObject"
              ],
              "Resource": [
                {
                  "Fn::Sub": [
                    "arn:aws:s3:::${S3Bucket}/private/${identityId}/*",
                    {
                      "identityId": {
                        "Fn::Sub": "${aws:userid}"
                      }
                    }
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListBucket"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::${S3Bucket}"
                }
              ],
              "Condition": {
                "StringLike": {
                  "s3:prefix": [
                    {
                      "Fn::Sub": [
                        "private/${identityId}/*",
                        {
                          "identityId": {
                            "Fn::Sub": "${aws:userid}"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "Condition": "CreateAuthPrivate"
    },
    "S3AuthUploadPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Ref": "s3UploadsPolicy"
        },
        "Roles": [
          {
            "Ref": "authRoleName"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::${S3Bucket}/uploads/*"
                }
              ]
            }
          ]
        }
      },
      "Condition": "CreateAuthUploads"
    },
    "S3AuthReadPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Ref": "s3ReadPolicy"
        },
        "Roles": [
          {
            "Ref": "authRoleName"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::${S3Bucket}/protected/*"
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:ListBucket"
              ],
              "Resource": [
                {
                  "Fn::Sub": "arn:aws:s3:::${S3Bucket}"
                }
              ],
              "Condition": {
                "StringLike": {
                  "s3:prefix": ["protected/*"]
                }
              }
            }
          ]
        }
      },
      "Condition": "CreateAuthRead"
    }
  },
  "Outputs": {
    "BucketName": {
      "Value": {
        "Ref": "S3Bucket"
      },
      "Description": "Bucket name for the S3 bucket"
    },
    "S3BucketSecureURL": {
      "Value": {
        "Fn::Sub": "https://${S3Bucket.DomainName}"
      },
      "Description": "Bucket secure URL"
    },
    "Region": {
      "Value": {
        "Ref": "AWS::Region"
      }
    }
  }
}